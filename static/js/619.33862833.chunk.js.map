{"version":3,"file":"static/js/619.33862833.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","components/DetailsCard/DetailsCard.styled.jsx","components/DetailsCard/DetailsCard.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js","services/authentication.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { AiFillCaretLeft } from 'react-icons/ai';\n\nexport const Containter = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 60px);\n  background-image: ${props =>\n    props.backImg\n      ? `linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.5)), url(${props.backImg})`\n      : 'none'};\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nexport const BackLink = styled(Link)`\n  position: fixed;\n  bottom: 30px;\n  left: 40px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding-left: 5px;\n  padding-right: 15px;\n  height: 30px;\n  border-radius: 5px;\n\n  text-decoration: none;\n  background-color: wheat;\n  color: black;\n  &:hover {\n    background-color: aliceblue;\n  }\n`;\n\nexport const BackLinkIcon = styled(AiFillCaretLeft)`\n  width: 24px;\n  height: 24px;\n  display: block;\n`;\n\nexport const BackLinkText = styled.span``;\n\nexport const CastLink = styled(Link)``;\n\nexport const ReviewsLink = styled(Link)``;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: white;\n`;\n\nexport const PosterImg = styled.img`\n  width: 240px;\n  border-radius: 8px;\n  border: white solid 2px;\n`;\n\nexport const Description = styled.div`\n  padding: 0 30px;\n  width: 400px;\n  border-radius: 8px;\n  border: white solid 2px;\n`;\n","import { Container, PosterImg, Description } from './DetailsCard.styled';\n\nconst imgBaseURL = 'https://image.tmdb.org/t/p/w500/';\n\nfunction DetailsCard({ movieInfo }) {\n  if (!movieInfo.poster_path) return;\n  const year = new Date(movieInfo.release_date).getFullYear();\n  return (\n    <Container>\n      <PosterImg\n        src={imgBaseURL + movieInfo.poster_path}\n        alt={movieInfo.title}\n      />\n      <Description>\n        <h2>{movieInfo.title}</h2>\n        <h3>{year}</h3>\n        <p>Рейтинг: {movieInfo.vote_average}</p>\n        <p>{movieInfo.overview}</p>\n      </Description>\n    </Container>\n  );\n}\n\nexport default DetailsCard;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useEffect, useState, Suspense, useRef } from 'react';\nimport * as API from '../../services/api';\nimport {\n  Containter,\n  BackLink,\n  BackLinkIcon,\n  BackLinkText,\n  CastLink,\n  ReviewsLink,\n} from './MovieDetails.styled';\nimport DetailCard from 'components/DetailsCard';\nimport Loader from 'components/Loader';\n\nconst IMG_ORIGIN_URL = 'https://image.tmdb.org/t/p/original/';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movieDetails, setmovieDetails] = useState([]);\n\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n  const refbackLink = useRef(backLink);\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        const response = await API.getDetailsById(movieId);\n        setmovieDetails(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieDetails();\n  }, [movieId]);\n\n  const backgroundImgURL = movieDetails.backdrop_path\n    ? IMG_ORIGIN_URL + movieDetails.backdrop_path\n    : null;\n\n  return (\n    <Containter backImg={backgroundImgURL}>\n      <BackLink to={refbackLink.current}>\n        <BackLinkIcon />\n        <BackLinkText>Back</BackLinkText>\n      </BackLink>\n      <DetailCard movieInfo={movieDetails} />\n      <CastLink to={'cast'}>Cast</CastLink>\n      <ReviewsLink to={'reviews'}>Reviews</ReviewsLink>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Containter>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport * as auth from './authentication';\n\n// Base URL for The Movie Database (TMDb) API.\nconst TMDB_BASE_URL = 'https://api.themoviedb.org/3';\n\n// Authorization header for API requests (with API Read Access Token).\nconst AUTHORIZATION_HEADER = `Bearer ${auth.ACCESS_TOKEN}`;\n\n// Default parameters for requests.\nconst defaultParams = {\n  language: 'uk', //'en-US',\n};\n\n/**\n * Creates an Axios instance with configured parameters.\n * @returns {AxiosInstance} - Axios instance.\n */\nconst createAxiosInstance = () => {\n  const instance = axios.create({\n    baseURL: TMDB_BASE_URL,\n    headers: {\n      Authorization: AUTHORIZATION_HEADER,\n      accept: 'application/json',\n    },\n  });\n  return instance;\n};\n\n/**\n * Handles request errors and throws an exception.\n * @param {Error} error - Axios error.\n * @throws {Error} - Error with detailed message.\n */\nconst handleError = error => {\n  console.error('An error occurred while fetching data: ', error);\n  throw error;\n};\n\n/**\n * Sends an HTTP request to The Movie Database (TMDb) API.\n * @param {string} url - API resource path.\n * @param {Object} params - Request parameters.\n * @returns {Promise} - Promise resolved with data from the API response.\n * @throws {Error} - Error when making an API request.\n */\nconst sendRequest = async (url, params) => {\n  const axiosInstance = createAxiosInstance();\n  try {\n    const response = await axiosInstance.get(url, { params });\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\n/**\n * Retrieves a list of popular movies for the current day.\n * @param {number} currentPage - The current page (default is 1).\n * @returns {Promise} - A Promise that resolves with data about popular movies.\n */\nexport const getTrending = async (currentPage = 1) => {\n  const page =\n    currentPage > 1 && currentPage < 501 ? { page: currentPage } : {};\n  const params = { ...defaultParams, ...page };\n  return sendRequest('/trending/movie/week', params);\n};\n\n/**\n * Searches for movies by name.\n *\n * @param {string} searchQuery - The name of the movie to search for.\n * @param {number} currentPage - The current page (default is 1).\n * @param {boolean} includeAdult - Whether to include adult content (default is false).\n * @returns {Promise} - A Promise that resolves with search results for the specified movie name.\n */\nexport const getSearchMovieByName = async (\n  searchQuery,\n  currentPage = 1,\n  include_adult = false\n) => {\n  const page =\n    currentPage > 1 && currentPage < 501 ? { page: currentPage } : {};\n  const query = searchQuery ? { query: searchQuery } : {};\n  const params = {\n    ...defaultParams,\n    ...page,\n    ...{ include_adult },\n    ...query,\n  };\n  return sendRequest('/search/movie', params);\n};\n\n/**\n * Fetches movie details by ID.\n *\n * @param {number} id - The ID of the movie to retrieve details for.\n * @returns {Promise} - A Promise that resolves with details of the movie.\n */\nexport const getDetailsById = async id => {\n  return sendRequest(`/movie/${id}`, defaultParams);\n};\n\n/**\n * Fetches movie credits by ID.\n *\n * @param {number} id - The ID of the movie to retrieve credits for.\n * @returns {Promise} - A Promise that resolves with credits information for the movie.\n */\nexport const getMovieCreditsById = async id => {\n  return sendRequest(`/movie/${id}/credits`, defaultParams);\n};\n\n/**\n * Fetches movie reviews by ID.\n *\n * @param {number} id - The ID of the movie to retrieve reviews for.\n * @returns {Promise} - A Promise that resolves with reviews for the movie.\n */\nexport const getMovieReviewsById = async id => {\n  return sendRequest(`/movie/${id}/reviews`, defaultParams);\n};\n","const ACCESS_TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNzAyOWU5YWZkNTU1ZGY1OThjOGQ5YWFjZjE1MzE5NCIsInN1YiI6IjY1MDdlOTZkMzk0YTg3MDEzOTE2M2ZhMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.NoihScHXYkfZWcV8hIaKYGQj8NhV_3GT6Zlttn5TCAE';\n\nconst API_KEY = 'd7029e9afd555df598c8d9aacf153194';\n\nexport { ACCESS_TOKEN, API_KEY };\n"],"names":["Containter","styled","props","backImg","BackLink","Link","BackLinkIcon","AiFillCaretLeft","BackLinkText","CastLink","ReviewsLink","Container","PosterImg","Description","movieInfo","poster_path","year","Date","release_date","getFullYear","src","alt","title","vote_average","overview","movieId","useParams","useState","movieDetails","setmovieDetails","backLink","useLocation","state","from","refbackLink","useRef","useEffect","API","response","console","log","getMovieDetails","backgroundImgURL","backdrop_path","to","current","Suspense","fallback","Loader","AUTHORIZATION_HEADER","defaultParams","language","handleError","error","sendRequest","url","params","axiosInstance","axios","baseURL","headers","Authorization","accept","get","data","getTrending","currentPage","page","getSearchMovieByName","searchQuery","include_adult","query","getDetailsById","id","getMovieCreditsById","getMovieReviewsById"],"sourceRoot":""}