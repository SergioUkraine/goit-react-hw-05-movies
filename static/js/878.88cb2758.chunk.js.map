{"version":3,"file":"static/js/878.88cb2758.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","components/DetailsCard/DetailsCard.styled.jsx","components/DetailsCard/DetailsCard.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/DetailsControls/DetailsControls.styled.jsx","components/DetailsControls/DetailsControls.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js","services/authentication.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Containter = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 60px);\n  background-image: ${props =>\n    props.backImg\n      ? `linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.5)), url(${props.backImg})`\n      : 'none'};\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 20px;\n  display: flex;\n\n  background-color: rgba(0, 0, 0, 0.5);\n  color: white;\n`;\n\nexport const PosterImg = styled.img`\n  width: 240px;\n  border-radius: 8px;\n  border: white solid 2px;\n`;\n\nexport const Description = styled.div`\n  padding: 0 30px;\n  min-width: 300px;\n  max-width: calc(100vw / 2 - 120px);\n`;\n\nexport const Inner = styled.div`\n  padding: 0 30px;\n  min-width: 300px;\n  max-width: calc(100vw / 2 - 120px);\n`;\n","import { Container, PosterImg, Description, Inner } from './DetailsCard.styled';\nimport noPosterImage from '../../images/poster.jpg';\nimport PropTypes from 'prop-types';\n\nconst imgBaseURL = 'https://image.tmdb.org/t/p/w500/';\n\nfunction DetailsCard({ movieInfo, children }) {\n  const year = new Date(\n    movieInfo.release_date ? movieInfo.release_date : null\n  ).getFullYear();\n  return (\n    <Container>\n      <div>\n        {movieInfo.poster_path ? (\n          <PosterImg\n            src={imgBaseURL + movieInfo.poster_path}\n            alt={movieInfo.title}\n          />\n        ) : (\n          <PosterImg src={noPosterImage} alt={'image no found'} />\n        )}\n      </div>\n      <Description>\n        <h2>{movieInfo.title}</h2>\n        <h3>{year}</h3>\n        {movieInfo.vote_average ? (\n          <p>Рейтинг: {movieInfo.vote_average.toFixed(1)}</p>\n        ) : null}\n\n        {movieInfo.overview ? (\n          <>\n            <h3>Опис</h3>\n            <p>{movieInfo.overview}</p>\n          </>\n        ) : null}\n      </Description>\n      <Inner>{children}</Inner>\n    </Container>\n  );\n}\n\nDetailsCard.propTypes = {\n  movieInfo: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n  }).isRequired,\n  children: PropTypes.node,\n};\n\nexport default DetailsCard;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { AiFillCaretLeft } from 'react-icons/ai';\n\nexport const LinkButton = styled(Link)`\n  position: fixed;\n  top: 15px;\n  left: 20px;\n  display: inline-flex;\n  justify-content: center;\n  z-index: 200;\n  align-items: center;\n  padding-left: 5px;\n  padding-right: 15px;\n  height: 30px;\n  border-radius: 5px;\n\n  text-decoration: none;\n  background-color: wheat;\n  color: black;\n  &:hover {\n    background-color: aliceblue;\n  }\n`;\n\nexport const LinkIcon = styled(AiFillCaretLeft)`\n  width: 24px;\n  height: 24px;\n  display: block;\n`;\n\nexport const LinkText = styled.span``;\n","import { LinkButton, LinkIcon, LinkText } from './BackLink.styled';\nimport PropTypes from 'prop-types';\n\nfunction BackLink({ backRef }) {\n  return (\n    <LinkButton to={backRef}>\n      <LinkIcon />\n      <LinkText>Назад</LinkText>\n    </LinkButton>\n  );\n}\n\nBackLink.propTypes = {\n  backRef: PropTypes.object.isRequired,\n};\n\nexport default BackLink;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Contaner = styled.div`\n  position: fixed;\n  top: 15px;\n  right: 30px;\n  z-index: 200;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  justify-content: center;\n  z-index: 500;\n  align-items: center;\n  padding: 0 15px;\n  height: 30px;\n  border-radius: 5px;\n\n  text-decoration: none;\n  background-color: wheat;\n  color: black;\n  &:not(:last-of-type) {\n    margin-right: 20px;\n  }\n  &:hover {\n    background-color: aliceblue;\n  }\n`;\n","import { Contaner, StyledLink } from './DetailsControls.styled';\n\nfunction DetailsControls() {\n  return (\n    <Contaner>\n      <StyledLink to={'cast'}>У ролях</StyledLink>\n      <StyledLink to={'reviews'}>Огляди</StyledLink>\n    </Contaner>\n  );\n}\n\nexport default DetailsControls;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useEffect, useState, Suspense, useRef } from 'react';\nimport * as API from '../../services/api';\nimport { Containter } from './MovieDetails.styled';\nimport DetailCard from 'components/DetailsCard';\nimport Loader from 'components/Loader';\nimport BackLink from 'components/BackLink';\nimport DetailsControls from 'components/DetailsControls';\n\nconst IMG_ORIGIN_URL = 'https://image.tmdb.org/t/p/original/';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movieDetails, setmovieDetails] = useState({});\n\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n  const refbackLink = useRef(backLink);\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        const response = await API.getDetailsById(movieId);\n        setmovieDetails(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieDetails();\n  }, [movieId]);\n\n  const backgroundImgURL = movieDetails.backdrop_path\n    ? IMG_ORIGIN_URL + movieDetails.backdrop_path\n    : null;\n\n  return (\n    <Containter backImg={backgroundImgURL}>\n      <BackLink backRef={refbackLink.current} />\n      <DetailCard movieInfo={movieDetails}>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </DetailCard>\n      <DetailsControls />\n    </Containter>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport * as auth from './authentication';\n\n// Base URL for The Movie Database (TMDb) API.\nconst TMDB_BASE_URL = 'https://api.themoviedb.org/3';\n\n// Authorization header for API requests (with API Read Access Token).\nconst AUTHORIZATION_HEADER = `Bearer ${auth.ACCESS_TOKEN}`;\n\n// Default parameters for requests.\nconst defaultParams = {\n  language: 'uk', //'en-US',\n};\n\n/**\n * Creates an Axios instance with configured parameters.\n * @returns {AxiosInstance} - Axios instance.\n */\nconst createAxiosInstance = () => {\n  const instance = axios.create({\n    baseURL: TMDB_BASE_URL,\n    headers: {\n      Authorization: AUTHORIZATION_HEADER,\n      accept: 'application/json',\n    },\n  });\n  return instance;\n};\n\n/**\n * Handles request errors and throws an exception.\n * @param {Error} error - Axios error.\n * @throws {Error} - Error with detailed message.\n */\nconst handleError = error => {\n  console.error('An error occurred while fetching data: ', error);\n  throw error;\n};\n\n/**\n * Sends an HTTP request to The Movie Database (TMDb) API.\n * @param {string} url - API resource path.\n * @param {Object} params - Request parameters.\n * @returns {Promise} - Promise resolved with data from the API response.\n * @throws {Error} - Error when making an API request.\n */\nconst sendRequest = async (url, params) => {\n  const axiosInstance = createAxiosInstance();\n  try {\n    const response = await axiosInstance.get(url, { params });\n    return response.data;\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\n/**\n * Retrieves a list of popular movies for the current day.\n * @param {number} currentPage - The current page (default is 1).\n * @returns {Promise} - A Promise that resolves with data about popular movies.\n */\nexport const getTrending = async (currentPage = 1) => {\n  const page =\n    currentPage > 1 && currentPage < 501 ? { page: currentPage } : {};\n  const params = { ...defaultParams, ...page };\n  return sendRequest('/trending/movie/week', params);\n};\n\n/**\n * Searches for movies by name.\n *\n * @param {string} searchQuery - The name of the movie to search for.\n * @param {number} currentPage - The current page (default is 1).\n * @param {boolean} includeAdult - Whether to include adult content (default is false).\n * @returns {Promise} - A Promise that resolves with search results for the specified movie name.\n */\nexport const getSearchMovieByName = async (\n  searchQuery,\n  currentPage = 1,\n  include_adult = false\n) => {\n  const page =\n    currentPage > 1 && currentPage < 501 ? { page: currentPage } : {};\n  const query = searchQuery ? { query: searchQuery } : {};\n  const params = {\n    ...defaultParams,\n    ...page,\n    ...{ include_adult },\n    ...query,\n  };\n  return sendRequest('/search/movie', params);\n};\n\n/**\n * Fetches movie details by ID.\n *\n * @param {number} id - The ID of the movie to retrieve details for.\n * @returns {Promise} - A Promise that resolves with details of the movie.\n */\nexport const getDetailsById = async id => {\n  return sendRequest(`/movie/${id}`, defaultParams);\n};\n\n/**\n * Fetches movie credits by ID.\n *\n * @param {number} id - The ID of the movie to retrieve credits for.\n * @returns {Promise} - A Promise that resolves with credits information for the movie.\n */\nexport const getMovieCreditsById = async id => {\n  return sendRequest(`/movie/${id}/credits`, defaultParams);\n};\n\n/**\n * Fetches movie reviews by ID.\n *\n * @param {number} id - The ID of the movie to retrieve reviews for.\n * @returns {Promise} - A Promise that resolves with reviews for the movie.\n */\nexport const getMovieReviewsById = async id => {\n  return sendRequest(`/movie/${id}/reviews`, defaultParams);\n};\n","const ACCESS_TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNzAyOWU5YWZkNTU1ZGY1OThjOGQ5YWFjZjE1MzE5NCIsInN1YiI6IjY1MDdlOTZkMzk0YTg3MDEzOTE2M2ZhMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.NoihScHXYkfZWcV8hIaKYGQj8NhV_3GT6Zlttn5TCAE';\n\nconst API_KEY = 'd7029e9afd555df598c8d9aacf153194';\n\nexport { ACCESS_TOKEN, API_KEY };\n"],"names":["Containter","styled","props","backImg","Container","PosterImg","Description","Inner","movieInfo","children","year","Date","release_date","getFullYear","poster_path","src","alt","title","noPosterImage","vote_average","toFixed","overview","LinkButton","Link","LinkIcon","AiFillCaretLeft","LinkText","backRef","to","Contaner","StyledLink","movieId","useParams","useState","movieDetails","setmovieDetails","backLink","useLocation","state","from","refbackLink","useRef","useEffect","API","response","console","log","getMovieDetails","backgroundImgURL","backdrop_path","current","Suspense","fallback","Loader","AUTHORIZATION_HEADER","defaultParams","language","handleError","error","sendRequest","url","params","axiosInstance","axios","baseURL","headers","Authorization","accept","get","data","getTrending","currentPage","page","getSearchMovieByName","searchQuery","include_adult","query","getDetailsById","id","getMovieCreditsById","getMovieReviewsById"],"sourceRoot":""}