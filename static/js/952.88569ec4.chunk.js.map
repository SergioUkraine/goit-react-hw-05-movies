{"version":3,"file":"static/js/952.88569ec4.chunk.js","mappings":"mRAEaA,EAAYC,EAAAA,EAAAA,IAAH,2GAOTC,EAAcD,EAAAA,EAAAA,MAAH,8I,SCKxB,MAZA,YAAgD,IAA3BE,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,SACjC,OACE,SAACJ,EAAD,WACE,SAACE,EAAD,CACEG,SAAUF,EACVG,MAAOF,EACPG,YAAY,oHAInB,E,SC+BD,MApCA,WACE,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAcL,EAAaM,IAAI,KAAON,EAAaM,IAAI,KAAO,GAEpE,GAA4BJ,EAAAA,EAAAA,YAA5B,eAAOK,EAAP,KAAeC,EAAf,KAuBA,OAtBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEL,GAAa,GADf,kBAG2BM,EAAAA,GACrBL,EAAYM,eAJlB,OAGUC,EAHV,OAMIJ,EAAUI,EAASC,SANvB,gDAQIC,QAAQC,IAAR,MARJ,yBAUIX,GAAa,GAVjB,6EADc,uBAAC,WAAD,wBAcdY,EACD,GAAE,CAACX,KAQF,4BACE,SAAC,EAAD,CAAWX,aAPW,SAAAuB,GACxB,IAAMC,EAAQD,EAAEE,cAActB,MAC9BI,EAAgBiB,EAAQ,CAAEE,EAAGF,GAAU,CAAC,EACzC,EAI+CvB,SAAUU,IACrDE,GAAS,SAACc,EAAA,EAAD,CAAYd,OAAQA,IAAa,KAC1CJ,GAAY,SAACmB,EAAA,EAAD,IAAa,OAG/B,C","sources":["components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 100vw;\n  padding: 10px 0;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const SearchInput = styled.input`\n  width: 50vw;\n  height: 50px;\n  padding: 0 20px;\n  border-radius: 25px;\n  font-size: 20px;\n  font-weight: 600;\n`;\n","import { Container, SearchInput } from './SearchBar.styled';\n\nfunction SearchBar({ handleChange, setValue }) {\n  return (\n    <Container>\n      <SearchInput\n        onChange={handleChange}\n        value={setValue}\n        placeholder=\"Введіть назву фільму\"\n      />\n    </Container>\n  );\n}\n\nexport default SearchBar;\n","import * as API from '../../services/api';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList';\nimport SearchBar from 'components/SearchBar';\nimport Loader from 'components/Loader';\n\nfunction Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const searchQuery = searchParams.get('q') ? searchParams.get('q') : '';\n\n  const [movies, setMovies] = useState();\n  useEffect(() => {\n    async function getMovieCast() {\n      setIsLoading(true);\n      try {\n        const response = await API.getSearchMovieByName(\n          searchQuery.toLowerCase()\n        );\n        setMovies(response.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovieCast();\n  }, [searchQuery]);\n\n  const handleChangeInput = e => {\n    const query = e.currentTarget.value;\n    setSearchParams(query ? { q: query } : {});\n  };\n\n  return (\n    <div>\n      <SearchBar handleChange={handleChangeInput} setValue={searchQuery} />\n      {movies ? <MoviesList movies={movies} /> : null}\n      {isLoading ? <Loader /> : null}\n    </div>\n  );\n}\nexport default Movies;\n"],"names":["Container","styled","SearchInput","handleChange","setValue","onChange","value","placeholder","useSearchParams","searchParams","setSearchParams","useState","isLoading","setIsLoading","searchQuery","get","movies","setMovies","useEffect","API","toLowerCase","response","results","console","log","getMovieCast","e","query","currentTarget","q","MoviesList","Loader"],"sourceRoot":""}